{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/signup/signup.component.html","./src/app/auth/signup/signup.component.ts","./src/app/auth/auth.module.ts","./src/app/auth/login/login.component.html","./src/app/auth/login/login.component.ts"],"names":[],"mappings":"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","file":"auth-auth-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path: 'login', component: LoginComponent\r\n    },\r\n    {\r\n        path: 'signup', component: SignupComponent\r\n    }\r\n]\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule{}","<mat-card>\r\n    <mat-spinner *ngIf=\"isLoading\" strokeWidth=8></mat-spinner>\r\n    <form (submit)=\"onSignup(signupForm)\" #signupForm=\"ngForm\" *ngIf=\"!isLoading\">\r\n        <mat-form-field>\r\n            <input \r\n            matInput \r\n            type=\"email\" \r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            ngModel\r\n            #emailInput=\"ngModel\"\r\n            required\r\n            email>\r\n            <mat-error *ngIf=\"emailInput.invalid\">Введите корректный email</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n            <input \r\n            type=\"password\" \r\n            matInput \r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            ngModel\r\n            #passwordlnput=\"ngModel\"\r\n            required>\r\n            <mat-error *ngIf=\"passwordlnput.invalid\">Введите пароль</mat-error>\r\n        </mat-form-field>\r\n        <button mat-stroked-button\r\n            class=\"signUpBtn\"\r\n            color=\"primary\" \r\n            type=\"submit\">Зарегистрироваться</button>\r\n    </form>\r\n</mat-card>\r\n","import { Subscription } from 'rxjs';\r\nimport { AuthService } from './../auth.service';\r\nimport {Component, OnInit, OnDestroy} from '@angular/core'\r\nimport { NgForm } from '@angular/forms'\r\n\r\n@Component({\r\n    templateUrl: './signup.component.html',\r\n    styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit, OnDestroy{\r\n    isLoading = false\r\n    private authStatusSub: Subscription\r\n\r\n    constructor(public authService: AuthService){}\r\n\r\n    ngOnInit(){\r\n        this.authStatusSub = this.authService.getAuthStatusListener()\r\n        .subscribe(authStatus => {\r\n            this.isLoading = false\r\n        })\r\n    }\r\n    \r\n    onSignup(form: NgForm){\r\n        if(form.invalid)\r\n            return\r\n\r\n        this.isLoading = true\r\n        this.authService.createUser(form.value.email, form.value.password)\r\n        \r\n    }\r\n\r\n    ngOnDestroy(){\r\n        this.authStatusSub.unsubscribe()\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AngularMaterialModule } from './../angular-material.module';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        LoginComponent,\r\n        SignupComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        AngularMaterialModule,\r\n        AuthRoutingModule\r\n    ]\r\n})\r\nexport class AuthModule{}","<mat-card>\r\n    <mat-spinner *ngIf=\"isLoading\" strokeWidth=8></mat-spinner>\r\n    <form (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\" *ngIf=\"!isLoading\">\r\n        <mat-form-field>\r\n            <input \r\n            matInput \r\n            type=\"email\" \r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            ngModel\r\n            #emailInput=\"ngModel\"\r\n            required\r\n            email>\r\n            <mat-error *ngIf=\"emailInput.invalid\">Введите корректный email</mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n            <input \r\n            type=\"password\" \r\n            matInput \r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            ngModel\r\n            #passwordlnput=\"ngModel\"\r\n            required>\r\n            <mat-error *ngIf=\"passwordlnput.invalid\">Введите пароль</mat-error>\r\n        </mat-form-field>\r\n        <button mat-stroked-button\r\n            class=\"signInBtn\"\r\n            type=\"submit\">Войти</button>\r\n    </form>\r\n</mat-card>\r\n","import { Subscription } from 'rxjs';\r\nimport { AuthService } from './../auth.service';\r\nimport {Component, OnInit, OnDestroy} from '@angular/core'\r\nimport { NgForm } from '@angular/forms'\r\n\r\n@Component({\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy{\r\n    isLoading = false\r\n    private authStatusSub: Subscription\r\n\r\n    constructor(public authService: AuthService){}\r\n\r\n    ngOnInit(){\r\n        this.authStatusSub = this.authService.getAuthStatusListener()\r\n        .subscribe(authStatus => {\r\n            this.isLoading = false\r\n        })\r\n    }\r\n    onLogin(form: NgForm){\r\n        if(form.invalid)\r\n            return\r\n\r\n        this.isLoading = true\r\n        this.authService.login(form.value.email, form.value.password)\r\n    }\r\n\r\n    ngOnDestroy(){\r\n        this.authStatusSub.unsubscribe()\r\n    }\r\n}"],"sourceRoot":"webpack:///"}